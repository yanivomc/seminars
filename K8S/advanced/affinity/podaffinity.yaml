# NOTE: The affinity on this pod defines one pod affinity rule and one pod anti-affinity rule. 
# podAffinity is  requiredDuringSchedulingIgnoredDuringExecution while,
# podAntiAffinity is preferredDuringSchedulingIgnoredDuringExecution. 

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: spring-pod-affinity
  labels:
    app: spring-music
    tier: frontend
spec:
  replicas: 2
  selector:  
    matchLabels:
      app: spring-music
  template:   
    metadata:
      labels:
        app: spring-music
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: cache
                operator: In
                values:
                - redis
            topologyKey: topology.kubernetes.io/zone
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - spring-music
            topologyKey: topology.kubernetes.io/zone
      containers:
      - name: spring-music
        image: yanivomc/spring-music:latest


---

## THIS will start a redis pod as part of the example and affinity rule above
apiVersion: v1
kind: Pod
metadata:
  name: redis-cache
  labels:
    cache: redis
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: topology.kubernetes.io/zone
            operator: In
            values:
            - eu-west-1b
            - eu-west-1c
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: node.kubernetes.io/instance-type
            operator: In
            values:
            - t3.large
  containers:
  - name: redis
    image: redis:latest

